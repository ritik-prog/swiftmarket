const getDashboardData = async (req, res) => {
  const sellerId = req.user.seller;
  const today = new Date();
  const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);

  try {
    const orderTotal = await Order.aggregate([
      {
        $match: {
          seller: mongoose.Types.ObjectId(sellerId),
          createdAt: { $gte: firstDayOfMonth },
        },
      },
      {
        $group: {
          _id: null,
          total: { $sum: "$orderTotal" },
        },
      },
    ]);

    const newCustomers = await Order.distinct("customer", {
      seller: mongoose.Types.ObjectId(sellerId),
      createdAt: { $gte: firstDayOfMonth },
    });

    const returningCustomers = await Order.distinct("customer", {
      seller: mongoose.Types.ObjectId(sellerId),
      createdAt: { $lt: firstDayOfMonth },
    });

    const retentionRate =
      returningCustomers.length > 0
        ? ((newCustomers.length / returningCustomers.length) * 100).toFixed(2)
        : 0;

    const totalOrders = await Order.countDocuments({
      seller: mongoose.Types.ObjectId(sellerId),
      createdAt: { $gte: firstDayOfMonth },
    });

    res.status(200).json({
      orderTotal: orderTotal.length > 0 ? orderTotal[0].total : 0,
      newCustomers: newCustomers.length,
      returningCustomers: returningCustomers.length,
      retentionRate: retentionRate,
      totalOrders: totalOrders,
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "Server Error" });
  }
};
